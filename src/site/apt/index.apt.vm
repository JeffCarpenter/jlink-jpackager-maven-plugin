~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

${project.name}

  The JLink-JPackager Maven Plugin is intended to create a {{{http://openjdk.java.net/jeps/220}Modular Java Run-Time Images}}
  via {{{http://openjdk.java.net/jeps/282}jlink}} 
  or an installable package via {{{http://openjdk.java.net/jeps/343}jpackage}} 
    
  NOTE: This is an alpha release which means everything can change until we reach the first
  milestone release.

  The JLink-JPackager Maven Plugin is available on GitHub: {{{https://github.com/agilhard-oss/jlink-jpackager-maven-plugin}jlink-jpackager-maven-plugin}}

* Goals Overview

  The JLink-JPackager Maven Plugin has three goals:

  * {{{./jlink-mojo.html}jlink-jpackager:jlink}} create a Java Run Time Image from <<jar>>/<<jmod>> files.

  * {{{./jpackager-mojo.html}jlink-jpackager:jpackager}} create a native installer package with the <<jpackage>> tool.

  * {{{./help-mojo.html}jlink-jpackager:help}} displays help information on maven-jlink-plugin.

  []

* Usage

  General instructions on how to use the JLink-JPackager Plugin can be found on the {{{./usage.html}usage page}}. Some more
  specific use cases are described in the examples given below.

* Examples

  To provide you with better understanding on some usages of the JLink-JPackager Maven Plugin,
  you can take a look into the following examples.

  Example for jlink-jpackager-maven-plugin how to build a distroless docker image using the Java jlink tool:

  {{{https://github.com/agilhard-oss/jlink-distroless-maven-example}jlink-distroless-maven-example}}

  Minimalistic Example for jlink-jpackager-maven-plugin how to build a installable package using the Java jpackage tool:

 {{{https://github.com/agilhard-oss/jpackager-maven-example}jpackager-maven-example}}

